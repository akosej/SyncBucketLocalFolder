name: Release

on:
  push:
    branches: [ "main" ]
  
jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
          
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
                
    - name: Check Service
      uses: actions/setup-go@v5
      with: 
        go-version: '1.22'
            
    - name: Build
      run: |
        sudo GOOS=windows GOARCH=amd64 go build -o agaSyncBucket-windows.exe
        sudo GOOS=linux GOARCH=amd64 go build -o agaSyncBucket-linux
      
    - name: Create Tag
      id: create_tag
      run: |
        TAG_NAME=$(date +'%Y%m%d%H%M%S')
        echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV 
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG_NAME }}
        release_name: Release ${{ env.TAG_NAME }}
        body: |
          ## Sync AGA Minio 
          - Initial release 
        draft: false
        prerelease: false
        
    - name: Upload Release Asset (Windows)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./agaSyncBucket-windows.exe
        asset_name: agaSyncBucket-windows.exe
        asset_content_type: application/octet-stream

    - name: Upload Release Asset (Linux)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./agaSyncBucket-linux
        asset_name: agaSyncBucket-linux
        asset_content_type: application/octet-stream
